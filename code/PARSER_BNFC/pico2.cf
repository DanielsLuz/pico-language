PICO_PROGRAM. PROGRAM ::= "begin" DECLS SERIES "end" ".";
DECLARATION. DECLS ::= "declare" ID_TYPE_LIST ";";

TYPE_INTEGER. TYPE ::= "integer";
TYPE_STRING. TYPE ::= "string";


SERIES_STAT. SERIES ::= STAT ;

rules ASSIGN ::= ID ":=" EXP;

rules IF ::= "if" EXP "then" SERIES "fi";
rules IF ::= "if" EXP "then" SERIES "else" SERIES "fi";

rules WHILE ::= "while" EXP "do" SERIES "od";

STAT_ASSIGN. STAT ::= ASSIGN;
STAT_IF. STAT ::= IF;
STAT_WHILE. STAT ::= WHILE;


EXP_ID. EXP ::= ID ;
EXP_INTEGER_CONSTANT. EXP ::= INTEGER_CONSTANT ;
EXP_STRING_CONSTANT. EXP ::= STRING_CONSTANT ;
EXP_PLUS. EXP ::= PLUS ;
EXP_CONC. EXP ::= CONC ;
EXP_EXP. EXP ::= "("EXP")";

rules PLUS ::= EXP "+" EXP;
rules CONC ::= EXP "||" EXP;

rules ID ::= LETTER ID_CHARS;

rules ID_TYPE_LIST ::= ID ":" TYPE ;

ID_CHARS1. ID_CHARS ::= ID_CHAR ID_CHARS;


ID_CHAIR1. ID_CHAR ::= LETTER;
ID_CHAIR2. ID_CHAR ::= DIGIT;

rules INTEGER_CONSTANT ::= DIGIT DIGITS;

DIGITS1. DIGITS ::= DIGIT DIGITS;

rules STRING_CONSTANT ::= QUOTE STRING_TAIL;

STRING_TAIL1. STRING_TAIL ::= ANY_CHAR_BUT_QUOTE STRING_TAIL;
STRING_TAIL2. STRING_TAIL ::= QUOTE;

rules QUOTE ::= "\"";

ANY_CHAR_BUT_QUOTE1. ANY_CHAR_BUT_QUOTE ::= LETTER ;
ANY_CHAR_BUT_QUOTE2. ANY_CHAR_BUT_QUOTE ::= DIGIT;
ANY_CHAR_BUT_QUOTE3. ANY_CHAR_BUT_QUOTE ::= LITERAL;

rules LITERAL ::= "(" | ")" | "+" | "-" | ";" | "," | "||" | ":" | ":=";

rules LETTER ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" |
				   "h" | "i" | "j" | "k" | "l" | "m" | "n" |
				   "o" | "p" | "q" | "r" | "s" | "t" | "u" |
				   "v" | "w" | "x" | "y" | "z" |
				   "A" | "B" | "C" | "D" | "E" | "F" | "G" |
				   "H" | "I" | "J" | "K" | "L" | "M" | "N" |
				   "O" | "P" | "Q" | "R" | "S" | "T" | "U" |
				   "V" | "W" | "X" | "Y" | "Z";

rules DIGIT ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

